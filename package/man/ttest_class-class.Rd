% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ttest_class.R
\docType{class}
\name{ttest_class-class}
\alias{ttest_class-class}
\alias{ttest_class}
\title{ttest_class}
\description{
An S4 class for storing results of Bayesian t-test results.

\strong{Functions}

summary(`ttest_class`): prints summary of the fit.

print(`ttest_class`): prints a more detailed summary of the fit

show(`ttest_class`): prints a more detailed summary of the fit.

compare(`ttest_class`, fit2 = `ttest_class`): prints difference/equality of the first group against the second group. You can also provide the rope parameter.

compare(`ttest_class`, mu = `numeric`): prints difference/equality of the first group against a mean value. You can also provide the rope parameter.

compare(`ttest_class`, mu = `numeric`, sigma = `numeric`): prints difference/equality of the first group against a normal distribution provided with mean value and standard deviation. Note here that sigma is use only in the Cohens d calculation. You can also provide the rope parameter.

plot_difference(`ttest_class`, fit2 = `ttest_class`): a visualization of the difference between the first group and the second group. You can also provide the rope and bins (number of bins in the histogram) parameters.

plot_difference(`ttest_class`, mu = `numeric`): a visualization of the difference between the first group and a constant value or a normal distribution with mean value mu. You can also provide the rope and bins (number of bins in the histogram) parameters.

plot_samples(`ttest_class`): plots density for the first group samples.

plot_samples(`ttest_class`, fit2 = `ttest_class`): plots density for the first and the second group samples.

plot_samples(`ttest_class`, mu = `numeric`): plots density for the first group samples and a mean value in case second group is defined as a normal distribution or as a constant.

compare_distributions(`ttest_class`, fit2 = `ttest_class`): draws samples from distribution of the first group and compares them against samples drawn from the distribution of the second group. You can also provide the rope parameter.

compare_distributions(`ttest_class`, mu = `numeric`): draws samples from distribution of the first group and compares them against a mean value. You can also provide the rope parameter.

compare_distributions(`ttest_class`, mu = `numeric`, sigma = `numeric`): draws samples from distribution of the first group and compares them against samples from a normal distribution with a defined mean value and variance. You can also provide the rope parameter.

plot_distributions(`ttest_class`): a visualization of the distribution for the first group.

plot_distributions(`ttest_class`, fit2 = `ttest_class`): a visualization of the distribution for the first group and the distribution for the second group.

plot_distributions(`ttest_class`, mu = `numeric`): a visualization of the distribution for the first group and a constant value.

plot_distributions(`ttest_class`, mu = `numeric`, sigma = `numeric`): a visualization of the distribution for the first group and the normal distribution defined with a mean value and standard deviation.

plot_distributions_difference(`ttest_class`, fit2 = `ttest_class`): a visualization of the difference between the distribution of the first group and the distribution of the second group. You can also provide the rope and bins (number of bins in the histogram) parameters.

plot_distributions_difference(`ttest_class`, mu = `numeric`): a visualization of the difference between the distribution of the first group and a constant value. You can also provide the rope and bins (number of bins in the histogram) parameters.

plot_distributions_difference(`ttest_class`, mu = `numeric`, sigma = `numeric`): a visualization of the difference between the distribution of the first group and the normal distribution defined with a mean value and standard deviation. You can also provide the rope and bins (number of bins in the histogram) parameters.

plot_fit(`ttest_class`): plots fitted model against the data. Use this function to explore the quality of your fit.

plot_trace(`ttest_class`): traceplot for main fitted model parameters.
}
\section{Slots}{

\describe{
\item{\code{extract}}{Extract from Stan fit.}

\item{\code{fit}}{Stan fit.}

\item{\code{data}}{Raw data for the tested group.}
}}

